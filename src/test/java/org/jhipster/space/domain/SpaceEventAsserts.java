package org.jhipster.space.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SpaceEventAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpaceEventAllPropertiesEquals(SpaceEvent expected, SpaceEvent actual) {
        assertSpaceEventAutoGeneratedPropertiesEquals(expected, actual);
        assertSpaceEventAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpaceEventAllUpdatablePropertiesEquals(SpaceEvent expected, SpaceEvent actual) {
        assertSpaceEventUpdatableFieldsEquals(expected, actual);
        assertSpaceEventUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpaceEventAutoGeneratedPropertiesEquals(SpaceEvent expected, SpaceEvent actual) {
        assertThat(actual)
            .as("Verify SpaceEvent auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpaceEventUpdatableFieldsEquals(SpaceEvent expected, SpaceEvent actual) {
        assertThat(actual)
            .as("Verify SpaceEvent relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getDate()).as("check date").isEqualTo(expected.getDate()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getPhoto()).as("check photo").isEqualTo(expected.getPhoto()))
            .satisfies(a -> assertThat(a.getPhotoContentType()).as("check photo contenty type").isEqualTo(expected.getPhotoContentType()))
            .satisfies(a -> assertThat(a.getType()).as("check type").isEqualTo(expected.getType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpaceEventUpdatableRelationshipsEquals(SpaceEvent expected, SpaceEvent actual) {
        assertThat(actual)
            .as("Verify SpaceEvent relationships")
            .satisfies(a -> assertThat(a.getMission()).as("check mission").isEqualTo(expected.getMission()));
    }
}
